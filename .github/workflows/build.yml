name: Build Kernel Packages

on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        psabi: [default]

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 4096
        swap-size-mb: 512
        remove-dotnet: 'true'
        remove-android: 'true'

    - uses: actions/checkout@v3

    - name: Set up Debian container
      uses: addnab/docker-run-action@v3
      with:
        image: docker.io/library/debian:trixie-slim
        options: -v ${{ github.workspace }}:/work
        run: |
          cd /work
          apt update; apt install -y --no-install-recommends fakeroot build-essential git wget openssl libssl-dev ca-certificates libncurses-dev zstd xz-utils flex libelf-dev bison bc debhelper rsync kmod cpio gpg pahole python3
          openssl req -new -nodes -utf8 -sha512 -days 36500 -batch -x509 -config certs/default_x509.genkey -outform DER -out certs/signing_key.x509 -keyout certs/signing_key.pem
          git config --global --add safe.directory /work
          export lv=$(make -s kernelversion)
          export xv=$(cat localversion)
          export rv=0
          export git=$(git rev-parse --short=7 HEAD)
          export dv=$(git show -s --date=format:'%Y%m%d' --format=%cd)
          export jobs=$((2*$(nproc))); echo $jobs
          pvcmd="cat CONFIG/lingmo/gcc/config_${{ matrix.psabi }} | grep 'LOCALVERSION='" && export pv=$(eval $pvcmd | cut -d'"' -f2)
          mvcmd="make -j$jobs CC='gcc-13' HOSTCC='gcc-13' KDEB_PKGVERSION='$lv$pv$xv-$rv~$dv.g$git' bindeb-pkg 2>&1 | tee ../build-$lv$pv$xv-$rv~$dv.g$git_amd64.log && xz -e9 ../build-*$pv*"
          avcmd="mkdir -p assets/ && mv ../*$pv* assets/"
          eval $mvcmd && eval $avcmd

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.job-name }}~${{ github.sha }}
        path: |
          assets/**
        if-no-files-found: error