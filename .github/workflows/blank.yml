name: Build kernel deb packages

on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    name: Build kernel
    runs-on: ubuntu-latest
    # container: docker.io/library/ubuntu:noble
    steps:
      - name: Free up spaces
        run: |
          echo "=============================================================================="
          echo "Freeing up disk space on CI system"
          echo "=============================================================================="
          
          echo "Listing 100 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
          df -h
          echo "Removing large packages"
          sudo apt-get remove -y '^ghc-*'
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y azure-cli google-cloud-sdk google-chrome-stable firefox powershell monodoc-http mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          # deleting 15GB
          rm -rf /usr/share/dotnet/
          rm -rf /opt/hostedtoolcache
          df -h

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 4096
          swap-size-mb: 512
          remove-dotnet: 'true'
          remove-android: 'true'

      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Run command in container
        run: |
          docker run --rm \
          -v ${{ github.workspace }}:${{ github.workspace }} \
          -w ${{ github.workspace }} \
          ubuntu:noble \
          /bin/bash -c "pwd && apt update && apt install -y git && mv debian.d debian && mv config.conf .conf && mk-build-deps -i -t 'apt-get --yes' -r && dpkg-buildpackage -b -uc -us -tc -j$(nproc) && rm -v ../*dbg*.deb && mkdir artifact && mv ../*.deb artifact/ && tar -zcvf BuiltDeb.tar.gz ./artifact"
          
      - uses: actions/upload-artifact@v4
        with:
          name: LingmoOS Kernel Built
          path: BuiltDeb.tar.gz
          compression-level: 9 # maximum compression
